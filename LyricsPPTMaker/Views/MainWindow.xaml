<Window x:Class="LyricsPPTMaker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:LyricsPPTMaker"
        mc:Ignorable="d"
        Title="{Binding Title}" Name="LyricsPPTMaker" Height="650" Width="600" Icon="..\Resources\song_lyrics_icon_title.ico">
    <Grid Background="{StaticResource DarkMode.Base.Background}">
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding NewPresetDialogOpen}" Value="True">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding PresetNameDialogOpen}" Value="True">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding PresetManagerOpen}" Value="True">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="3.9*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="1.4*"/>
            <RowDefinition Height="1.2*"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Name="TxtSearchBox" Height="36" Margin="5" FontSize="20"
                                 Text="{Binding SearchboxText, UpdateSourceTrigger=PropertyChanged}" ToolTip="곡 제목을 입력하세요">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding SearchboxGotFocusCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding SearchboxLostFocusCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <i:Interaction.Behaviors>
                    <local:TextBoxBehavior EnterCommand="{Binding SearchLyricsCommand}"/>
                    <local:TextBoxBehavior IsControlFocus="{Binding IsSearchboxTextFocus}"/>
                </i:Interaction.Behaviors>
            </TextBox>
            <Button Template="{DynamicResource ButtonTemplate1}" Name="BtnSearchLyric" Grid.Column="1" Margin="5"
                                Command="{Binding SearchLyricsCommand}" ToolTip="검색">
                <Image Source="\Resources\search-white.png" Width="32" Height="32"/>
            </Button>
        </Grid>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.8*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Title" Margin="5"/>
            <TextBox Grid.Column="1" Margin="5,0" IsEnabled="False" ToolTip="제목">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource SongInfoItemConverter}" ConverterParameter="Title" Mode="OneWay">
                        <Binding Path="SongList"/>
                        <Binding ElementName="SongListBox" Path="SelectedIndex"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Artist" Grid.Column="2" Margin="5"/>
            <TextBox Grid.Column="3" Margin="5,0" IsEnabled="False" ToolTip="아티스트">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource SongInfoItemConverter}" ConverterParameter="Artist" Mode="OneWay">
                        <Binding Path="SongList"/>
                        <Binding ElementName="SongListBox" Path="SelectedIndex"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
            <Label Content="Album" Grid.Column="4" Margin="5"/>
            <TextBox Grid.Column="5" Margin="5,0" IsEnabled="False" ToolTip="앨범">
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource SongInfoItemConverter}" ConverterParameter="Album" Mode="OneWay">
                        <Binding Path="SongList"/>
                        <Binding ElementName="SongListBox" Path="SelectedIndex"/>
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <TextBox Name="TxtCurrentLyricNumber" Grid.Column="0" Margin="5 0" IsEnabled="False" ToolTip="현재 곡 번호"
                     Text="{Binding CurrentSongListIndex, Mode=OneWay, Converter={StaticResource PositiveIntToStringConverter}, ConverterParameter=1}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding SongListIndexChangedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Label Content="/" Grid.Column="1" HorizontalContentAlignment="Center"/>
            <TextBox Name="TxtTotalLyricCount" Grid.Column="2" Margin="5 0" IsEnabled="False" ToolTip="총 검색 갯수"
                     Text="{Binding TotalSongs, Mode=OneWay, Converter={StaticResource PositiveIntToStringConverter}, ConverterParameter=0}"/>
            <Button Content="_&lt;" Grid.Column="3" Margin="5 0" ToolTip="이전 곡" Command="{Binding GetPreviousSongInfoCommand}"
                    Template="{DynamicResource ButtonTemplate1}"/>
            <Button Content="_&gt;" Grid.Column="4" Margin="5 0" ToolTip="다음 곡" Command="{Binding GetNextSongInfoCommand}"
                    Template="{DynamicResource ButtonTemplate1}"/>
        </Grid>
        <ListBox Name="SongListBox" Grid.Row="2" Grid.Column="1" Background="Transparent" BorderThickness="0" ItemsSource="{Binding SongList}"
                 VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Visibility="Collapsed" 
                 SelectedIndex="{Binding CurrentSongListIndex}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" Background="Transparent" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>    
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBox Name="TxtLyrics" Grid.Row="3" Grid.ColumnSpan="2" Margin="5"
                             TextWrapping="Wrap" AcceptsReturn="True"  AcceptsTab="True" VerticalScrollBarVisibility="Auto"
                             VerticalAlignment="Stretch" Text="{Binding LyricsboxText, UpdateSourceTrigger=PropertyChanged}">
        </TextBox>
        <Button Name="BtnUsage" Grid.Row="3" Grid.Column="1" Content="?" Template="{DynamicResource ButtonTemplate1}" 
                            FontSize="20" Width="30" Focusable="False"
                            HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5" BorderBrush="White"
                            >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding UsageMouseEnterCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding UsageMouseLeaveCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Popup Name="PopUsage" Placement="Mouse" IsOpen="{Binding UsagePopupOpen}">
            <StackPanel>
                <TextBlock Text="문단으로 슬라이드를 구분합니다" FontSize="15"/>
                <Image Source="\Resources\LyricsUsageImage.png" Width="300" />
            </StackPanel>
        </Popup>
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="_Preset" Margin="5" Focusable="False"/>
            <ComboBox Style="{DynamicResource ComboBoxStyle1}" ItemsSource="{Binding PresetList}" DisplayMemberPath="Name" SelectedValuePath="Options"
                      SelectedIndex="{Binding CurrentSelectedPresetIndex}"
                      Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Margin="3 0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding UpdateInputsCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="4" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="_New" Margin="5 0" Command="{Binding OpenNewPresetDialogCommand}"
                    Template="{DynamicResource ButtonTemplate1}"/>
            <Popup IsOpen="{Binding NewPresetDialogOpen}" Height="100" Width="300" Placement="Center" AllowsTransparency="True" StaysOpen="False">
                <Border Background="{StaticResource DarkMode.Base.Background}" BorderBrush="Black" BorderThickness="2" CornerRadius="2,2,2,2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="0.7*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="프리셋 생성 방식을 선택하세요" FontSize="18"/>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Content="현재 프리셋 복사" Command="{Binding SetGenerationMethodCommand}" CommandParameter="Copy" 
                                    Template="{DynamicResource ButtonTemplate1}" Padding="5" Margin="2 0" />
                            <Button Content="기본값" Command="{Binding SetGenerationMethodCommand}" CommandParameter="Default"
                                    Template="{DynamicResource ButtonTemplate1}" Padding="5" Margin="2 0"/>
                            <Button Content="취소" Command="{Binding CloseNewPresetDialogCommand}"
                                    Template="{DynamicResource ButtonTemplate1}" Padding="5" Margin="2 0"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="Esc">
                        <i:InvokeCommandAction Command="{Binding CloseNewPresetDialogCommand}"/>
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </Popup>
            <Popup IsOpen="{Binding PresetNameDialogOpen}" Height="100" Width="300" Placement="Center" 
                   AllowsTransparency="True" StaysOpen="False">
                <Border Background="{StaticResource DarkMode.Base.Background}" BorderBrush="Black" BorderThickness="2" CornerRadius="2,2,2,2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.7*"/>
                            <RowDefinition Height="0.7*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding PresetGenMethod, Converter={StaticResource GuideMessage}}"/>
                        <TextBlock FontSize="18" Text="프리셋 이름:" Grid.Row="1" HorizontalAlignment="Left" Margin="5 0"/>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="TxtNewPresetName" Text="{Binding NewPresetName, UpdateSourceTrigger=PropertyChanged}" Margin="5 0">
                                <i:Interaction.Behaviors>
                                    <local:TextBoxBehavior EnterCommand="{Binding AddNewPresetCommand}"/>
                                    <local:TextBoxBehavior IsControlFocus="{Binding IsNewPresetNameFocus}"/>
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <Button Content="Ok" Grid.Column="1" Command="{Binding AddNewPresetCommand}" Margin="5 0"/>
                        </Grid>
                    </Grid>
                </Border>
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="Esc">
                        <i:InvokeCommandAction Command="{Binding ClosePresetNameDialogCommand}"/>
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </Popup>
            <Button Grid.Column="1" Content="Sa_ve" Margin="5 0" Command="{Binding SavePresetCommand}" 
                    Template="{DynamicResource ButtonTemplate1}"/>
            <Button Content="_Manage" Grid.Column="2" Margin="5 0" Command="{Binding OpenPresetManagerCommand}"
                    Template="{DynamicResource ButtonTemplate1}"/>
            <Popup IsOpen="{Binding PresetManagerOpen}" Placement="Center"
                   Width="300" Height="300" AllowsTransparency="True">
                <Border Background="{StaticResource DarkMode.Base.Background}" BorderBrush="Black" BorderThickness="2">
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PresetRenameDialogOpen}" Value="True">
                                        <Setter Property="Opacity" Value="0.7"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox Name="PresetListBox" ItemsSource="{Binding PresetList}" DisplayMemberPath="Name"
                                 SelectedIndex="{Binding SelectedPresetManagerIndex}"
                                 Grid.RowSpan="2" Margin="5"
                                 Background="{StaticResource DarkMode.Control.Static.Background}">
                        </ListBox>
                        <StackPanel Grid.Column="1" Margin="5" VerticalAlignment="Center">
                            <Button Content="∧" Command="{Binding ItemOrderUpCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                            <Button Content="∨" Command="{Binding ItemOrderDownCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2" Margin="5" VerticalAlignment="Center">
                            <Button Content="_Add" Margin="0 5" Command="{Binding AddDefaultPresetCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                            <Button Content="_Copy" Margin="0 5" Command="{Binding CopySelectedPresetCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                            <Button Content="_Rename" Margin="0 5" Command="{Binding RenameSelectedPresetCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                            <Button Content="_Delete" Margin="0 5" Command="{Binding DeleteSelectedPresetCommand}" Template="{DynamicResource ButtonTemplate1}"/>
                        </StackPanel>
                        <Popup IsOpen="{Binding PresetRenameDialogOpen}" Placement="Center" 
                               PlacementTarget="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid,AncestorLevel=1}}"
                            Width="200" Height="100" StaysOpen="False">
                            <Border Background="{StaticResource DarkMode.Base.Background}" BorderBrush="Black" BorderThickness="2" CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding NewPresetName,UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2">
                                        <i:Interaction.Behaviors>
                                            <local:TextBoxBehavior EnterCommand="{Binding UpdatePresetNameCommand}" 
                                                                   IsControlFocus="{Binding IsNewPresetNameFocus}"/>
                                        </i:Interaction.Behaviors>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ValidatePresetNameCommand}" CommandParameter="{Binding NewPresetName}"/>
                                            </i:EventTrigger>
                                            <i:KeyTrigger Key="Esc">
                                                <i:InvokeCommandAction Command="{Binding CloseRenameDialogCommand}"/>
                                            </i:KeyTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource NameValidationMessage}">
                                                <Binding Path="IsDuplicated"/>
                                                <Binding Path="IsEmptyOrWhiteSpace"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <Button Content="Ok" Command="{Binding UpdatePresetNameCommand}" Grid.Row="2" Template="{DynamicResource ButtonTemplate1}"/>
                                    <Button Content="Cancel" Command="{Binding CloseRenameDialogCommand}" Grid.Row="2" Grid.Column="1" Template="{DynamicResource ButtonTemplate1}"/>
                                </Grid>
                            </Border>
                        </Popup>
                        <Button Content="Clos_e" Grid.Row="1" Grid.Column="2" VerticalAlignment="Bottom" Margin="5"
                                Template="{DynamicResource ButtonTemplate1}" Command="{Binding ClosePresetManagerCommand}"/>
                    </Grid>
                </Border>
                <i:Interaction.Triggers>
                    <i:KeyTrigger Key="F2">
                        <i:InvokeCommandAction Command="{Binding RenameSelectedPresetCommand}"/>
                    </i:KeyTrigger>
                </i:Interaction.Triggers>
            </Popup>
        </Grid>
        <Grid Grid.Row="5" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Label Content="SlideSize" Margin="5"/>
            <RadioButton GroupName="SlideSize" Content="_WideScreen(16:9)" Grid.Column="1">
                <RadioButton.IsChecked>
                    <MultiBinding Converter="{StaticResource SlideSizeConverter}" ConverterParameter="WideScreen">
                        <Binding Path="SizeType"/>
                        <Binding Path="SlideWidth"/>
                    </MultiBinding>
                </RadioButton.IsChecked>
            </RadioButton>
            <RadioButton GroupName="SlideSize" Content="Norm_al(4:3)" Grid.Column="2">
                <RadioButton.IsChecked>
                    <MultiBinding Converter="{StaticResource SlideSizeConverter}" ConverterParameter="Normal">
                        <Binding Path="SizeType"/>
                        <Binding Path="SlideWidth"/>
                    </MultiBinding>
                </RadioButton.IsChecked>
            </RadioButton>
        </Grid>
        <Grid Grid.Row="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="BackGround" Margin="5"/>
            <xctk:ColorPicker Name="CmbBGColor" Grid.Column="1" Margin="5 10"
                                Background="{StaticResource DarkMode.Control.Static.Background}" Foreground="Ivory"
                                DropDownBackground="{StaticResource DarkMode.Control.Static.Background}"
                                HeaderBackground="{StaticResource DarkMode.Control.Static.Background}" HeaderForeground="Ivory" 
                                TabBackground="{StaticResource DarkMode.Control.Static.Background}" TabForeground="Ivory"
                                          SelectedColor="{Binding BackgroundColor}"/>
        </Grid>
        <Grid Grid.Row="6" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="FontColor" Margin="5"/>
            <xctk:ColorPicker Name="CmbFontColor" Grid.Column="1" Margin="5 10"
                                Background="{StaticResource DarkMode.Control.Static.Background}" Foreground="Ivory"
                                DropDownBackground="{StaticResource DarkMode.Control.Static.Background}"
                                HeaderBackground="{StaticResource DarkMode.Control.Static.Background}" HeaderForeground="Ivory" 
                                TabBackground="{StaticResource DarkMode.Control.Static.Background}" TabForeground="Ivory"
                                          SelectedColor="{Binding ForegroundColor}"/>

        </Grid>
        <Grid Grid.Row="7">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="2.5*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Label Content="_Font" Margin="5" Target="{Binding ElementName=CmbFontList}"/>
            <ComboBox Style="{DynamicResource ComboBoxStyle1}" Grid.Column="1" Name="CmbFontList" Margin="3 0"
                                  ItemsSource="{Binding FontList, Mode=OneTime}" IsEditable="True" SelectedIndex="{Binding FontSelectedIndex}" />
            <Label Grid.Column="2" Margin="2" Content="_Size" Target="{Binding ElementName=NumFontSize}"/>
            <xctk:UIntegerUpDown Name="NumFontSize" Grid.Column="3" Margin="0 10 5 10" Text="{Binding FontSize}"/>
        </Grid>
        <Grid Grid.Row="7" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Emphasis" Margin="5"/>
            <CheckBox Template="{DynamicResource ImageCheckBoxTemplate}" Name="Check_old" Grid.Column="1" Margin="5 5 0 5"
                                  IsChecked="{Binding IsBold}">
                <Image Source="\Resources\bold-white.png" Width="28" Height="28" Margin="2"/>
            </CheckBox>
            <CheckBox Template="{DynamicResource ImageCheckBoxTemplate}" Name="CheckItalic" Grid.Column="2" Margin="1 5 1 5" 
                                  IsChecked="{Binding IsItalic}">
                <Image Source="\Resources\italic-white.png" Width="28" Height="28" Margin="2"/>
            </CheckBox>
            <CheckBox Template="{DynamicResource ImageCheckBoxTemplate}" Name="CheckUnderline" Grid.Column="3" Margin="0 5 5 5"
                                  IsChecked="{Binding IsUnderline}">
                <Image Source="\Resources\underline-white.png" Width="28" Height="28" Margin="2"/>
            </CheckBox>
        </Grid>
        <Grid Grid.Row="8" Grid.ColumnSpan="2">
            <TextBox Name="FontPreview" FontFamily="{Binding ElementName=CmbFontList, Path=SelectedItem, TargetNullValue=굴림}" 
                                 FontSize="{Binding ElementName=NumFontSize, Path=Text, TargetNullValue=40}"
                                 Background="{Binding BackgroundColor}"
                                 Foreground="{Binding ForegroundColor}"
                                 FontWeight="{Binding IsBold,Converter={StaticResource BoolToFontWeight}}"
                                 FontStyle="{Binding IsItalic,Converter={StaticResource BoolToFontStyle}}"
                                 TextDecorations="{Binding IsUnderline,Converter={StaticResource BoolToTextDecoration}}"
                                 VerticalAlignment="Stretch" TextAlignment="Center" Focusable="False"
                                     Text="{Binding FontPreviewText}" Margin="0,2,0,-2"/>
        </Grid>
        <Grid Grid.Row="9">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Vertical&#x0a;Alignment" Margin="5 0"/>
            <RadioButton Name="TitleVAlignTop" Template="{DynamicResource ToggleRadioButton}" 
                                     GroupName="TitleVerticalAlignment"
                                     Grid.Column="1" Margin="5 5 0 5"
                         IsChecked="{Binding LyricsVAlignment, Converter={StaticResource EnumtoBooleanConverter}, ConverterParameter=Top}"
                         Command="{Binding VAlignmentChangedCommand}">
                <Image Source="\Resources\valign-top-white.png" Width="32" Height="32"/>
            </RadioButton>
            <RadioButton Name="TitleVAlignCenter" Template="{DynamicResource ToggleRadioButton}" 
                                     GroupName="TitleVerticalAlignment" 
                                     Grid.Column="2" Margin="1 5 1 5" 
                         IsChecked="{Binding LyricsVAlignment, Converter={StaticResource EnumtoBooleanConverter}, ConverterParameter=Center}"
                         Command="{Binding VAlignmentChangedCommand}">
                <Image Source="\Resources\valign-center-white.png" Width="32" Height="32"/>
            </RadioButton>
            <RadioButton Name="TitleVAlignBottom" Template="{DynamicResource ToggleRadioButton}" 
                                     GroupName="TitleVerticalAlignment" 
                                     Grid.Column="3" Margin="0 5 5 5" 
                         IsChecked="{Binding LyricsVAlignment, Converter={StaticResource EnumtoBooleanConverter}, ConverterParameter=Bottom}"
                         Command="{Binding VAlignmentChangedCommand}">
                <Image Source="\Resources\valign-bottom-white.png" Width="32" Height="32"/>
            </RadioButton>
        </Grid>
        <Grid Grid.Row="9" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="_Offset ( cm )" Target="{Binding ElementName=NumAlignmentOffset}" Margin="5"/>
            <xctk:DecimalUpDown Name="NumAlignmentOffset" Grid.Column="1" Margin="5 10"
                                        Value="{Binding AlignmentOffset, UpdateSourceTrigger=PropertyChanged}" Increment="0.1" InputScope="Number" DefaultValue="0.0" 
                                        Maximum="{Binding OffsetMax}" Minimum="{Binding OffsetMin}" 
                                        FormatString="F2" ClipValueToMinMax="True" 
                                        ToolTip="수직 정렬 기준 위치로 부터 거리&#x0a;양수는 아래, 음수는 위 방향"/>
        </Grid>
        <Grid Grid.Row="10" Grid.Column="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Template="{DynamicResource ButtonTemplate1}" Name="BtnRefresh" Width="65"
                                VerticalAlignment="Stretch" ToolTip="초기화"
                                Command="{Binding ResetCommand}">
                <Image Source="\Resources\refresh-white.png" Width="32" Height="32"/>
            </Button>
            <Button Template="{DynamicResource ButtonTemplate1}" Name="BtnCopyClipboard" Grid.Column="1" Width="65"
                                VerticalAlignment="Stretch" ToolTip="가사 슬라이드를 클립보드에 복사합니다&#x0a;복사한 슬라이드를 기존 PPT에 붙여넣을 수 있습니다"
                                Content="_Copy"
                                Command="{Binding CopySlideCommand}"/>
            <!--
            <Button Template="{DynamicResource ButtonTemplate1}" Name="BtnAddToSongList" Grid.Column="2" 
                                Width="65" VerticalAlignment="Stretch" ToolTip="곡 목록에 추가"
                                AutomationProperties.AccessKey="c" >Add</Button> -->
            <Button Template="{DynamicResource ButtonTemplate1}" Name="BtnPreview" Grid.Column="3" Width="65"
                                VerticalAlignment="Stretch"  Content="Pre_view" Command="{Binding ChangePreviewStatusCommand}" />
        </Grid>
        <Popup Name="PopPreview"  Placement="Right" VerticalOffset="400" StaysOpen="True" AllowsTransparency="True" IsOpen="{Binding PreviewPopupOpen}">
            <Grid>
                <Rectangle Name="SlidePreview" 
                           Width="{Binding SlideWidth, Converter={StaticResource PreviewFrameSize}}"
                           Height="{Binding SlideHeight, Converter={StaticResource PreviewFrameSize}}" 
                           Fill="{Binding ElementName=FontPreview,Path=Background}"
                           ToolTip="텍스트 위치는 실제와 차이가 조금 있을 수 있습니다.&#x0a;클릭하면 닫습니다.">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding ChangePreviewStatusCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Rectangle>
                <TextBlock Name="SlidePreviewText" Width="{Binding ElementName=SlidePreview,Path=Width}"
                                     Background="Transparent"
                                     Foreground="{Binding ElementName=FontPreview,Path=Foreground}" 
                                     FontFamily="{Binding ElementName=FontPreview, Path=FontFamily, TargetNullValue=굴림}"
                                     FontSize="{Binding ElementName=FontPreview, Path=FontSize, Converter={StaticResource PreviewContentSize}}"
                                     FontWeight="{Binding ElementName=FontPreview, Path=FontWeight}"
                                     FontStyle="{Binding ElementName=FontPreview,Path=FontStyle}"
                                     TextDecorations="{Binding ElementName=FontPreview,Path=TextDecorations}"
                                     TextAlignment="Center"
                                     VerticalAlignment="{Binding LyricsVAlignment, Converter={StaticResource LyricsVAlignmentConverter}}"
                                     LineHeight="21.165" LineStackingStrategy="BlockLineHeight"
                                     ToolTip="텍스트 위치는 실제와 차이가 조금 있을 수 있습니다.&#x0a;클릭하면 닫습니다."
                                     Text="{Binding LyricsboxText,Converter={StaticResource FirstParagraphConverter}}" Focusable="False">
                    <TextBlock.Padding>
                        <MultiBinding Converter="{StaticResource AlignmentOffsetToPaddingConverter}" Mode="OneWay">
                            <Binding Path="LyricsVAlignment"/>
                            <Binding Path="AlignmentOffset"/>
                        </MultiBinding>
                    </TextBlock.Padding>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding ChangePreviewStatusCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </Grid>
        </Popup>
    </Grid>
</Window>
